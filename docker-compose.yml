  version: '3.8'

  services:
    app:
      build: .
      image: tlrs-app:latest
      container_name: tlrs-app
      ports:
        - "8080:8080"
      depends_on:
        postgres:
          condition: service_healthy
        redis:
          condition: service_started
        minio:
          condition: service_started
      networks:
        - app-network

    postgres:
      image: postgres:13-alpine
      container_name: user-management-db
      environment:
        POSTGRES_DB: user_management
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: admin
      volumes:
        - pgdata:/var/lib/postgresql/data
      ports:
        - "5432:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U admin -d user_management"]
        interval: 5s
        timeout: 5s
        retries: 10
      networks:
        - app-network

    redis:
      image: redis:6-alpine
      container_name: user-management-redis
      ports:
        - "6379:6379"
      networks:
        - app-network

    minio:
      image: minio/minio
      container_name: user-management-minio
      command: server /data --console-address ":9001"
      environment:
        MINIO_ROOT_USER: minioadmin
        MINIO_ROOT_PASSWORD: minioadmin
      volumes:
        - minio-data:/data
      ports:
        - "9000:9000"
        - "9001:9001"
      networks:
        - app-network

    minio-setup:
      image: minio/mc
      container_name: minio-setup
      depends_on:
        - minio
      entrypoint: >
        /bin/sh -c "
        until (/usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin) do echo 'Waitinf of MinIO...'; sleep 5; done;
        /usr/bin/mc mb minio/user-photos;
        /usr/bin/mc policy set public minio/user-photos;
        echo 'Bucket user-photos создан';
        "
      networks:
        - app-network

  volumes:
    pgdata:
    minio-data:

  networks:
    app-network:
      driver: bridge